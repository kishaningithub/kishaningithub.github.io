<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Kishan B</title>
    <link>https://kishaningithub.github.io/blog/</link>
    <description>Recent content in Blogs on Kishan B</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 18 Aug 2024 13:31:29 +0530</lastBuildDate>
    <atom:link href="https://kishaningithub.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Checking Out Code Using Github Action in Legacy Runner</title>
      <link>https://kishaningithub.github.io/blog/checking-out-code-using-github-action-in-legacy-runner/</link>
      <pubDate>Sun, 18 Aug 2024 13:31:29 +0530</pubDate>
      <guid>https://kishaningithub.github.io/blog/checking-out-code-using-github-action-in-legacy-runner/</guid>
      <description>&lt;h2 id=&#34;problem&#34;&gt;Problem&lt;/h2&gt;&#xA;&lt;p&gt;Performing a simple git checkout using official &lt;a href=&#34;https://github.com/actions/checkout&#34;&gt;checkout&lt;/a&gt; action fails in a legacy self hosted runner running amazon linux 2 because newer versions of nodejs(&amp;gt;= 20) requires a newer version of GLIBC which is not available in these operating systems.&lt;/p&gt;&#xA;&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;&#xA;&lt;p&gt;Use bash to perform the checkout in the action code i.e&lt;/p&gt;&#xA;&lt;p&gt;replace the line&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;with&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Checkout&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    git clone --depth 1 -b &amp;#34;${GITHUB_HEAD_REF:-$GITHUB_REF_NAME}&amp;#34; &amp;#34;https://github.com/${GITHUB_REPOSITORY}.git&amp;#34; .&lt;/span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;note&#34;&gt;Note&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;--depth 1&lt;/code&gt; performs a shallow-clone there by increasing your performance as we don&amp;rsquo;t need to pull the entire commit history for every pipeline run.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;${GITHUB_HEAD_REF:-$GITHUB_REF_NAME}&lt;/code&gt; doing this to ensure we always get the name of the branch which triggered the pipelines. This way of doing it makes it trigger agnostic i.e. both push and pull request trigger will work as intended.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;.&lt;/code&gt; The dot at the end ensures that the checkout happens in the current directory which is the workspace.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>How to get the DDL dump of a redshift database</title>
      <link>https://kishaningithub.github.io/blog/how-to-get-the-ddl-dump-of-a-redshift-database/</link>
      <pubDate>Thu, 12 Jan 2023 10:34:53 +0530</pubDate>
      <guid>https://kishaningithub.github.io/blog/how-to-get-the-ddl-dump-of-a-redshift-database/</guid>
      <description>&lt;p&gt;When I was googling &amp;ldquo;How to get the DDL dump of a redshift database&amp;rdquo; I found &lt;a href=&#34;https://awsbytes.com/how-to-get-the-ddl-of-a-table-in-redshift-database/&#34;&gt;this blog&lt;/a&gt;&#xA;which proposed a way do it but the con of the approach proposed there is it requires us create new objects in redshift just to extract DDL which was not acceptable&#xA;for me, so I tried and found a better way which is given below&lt;/p&gt;&#xA;&lt;h2 id=&#34;approach&#34;&gt;Approach&lt;/h2&gt;&#xA;&lt;p&gt;The approach below makes use of the following commands from redshift and wraps them in a bash script which makes use of the redshift data api&lt;/p&gt;</description>
    </item>
    <item>
      <title>Used TDD Approach for a Hello World Rust CLI App</title>
      <link>https://kishaningithub.github.io/blog/used-tdd-approach-for-a-hello-world-rust-cli-app/</link>
      <pubDate>Sun, 26 Jun 2022 15:12:24 +0530</pubDate>
      <guid>https://kishaningithub.github.io/blog/used-tdd-approach-for-a-hello-world-rust-cli-app/</guid>
      <description>&lt;p&gt;For the first time ever in my life i wrote hello world application using &lt;a href=&#34;https://en.wikipedia.org/wiki/Test-driven_development&#34;&gt;TDD (Test driven development)&lt;/a&gt;. Don&amp;rsquo;t get me wrong here, i have practiced TDD before for larger applications but never have i done it for an hello world app.&lt;/p&gt;&#xA;&lt;h2 id=&#34;problem&#34;&gt;Problem&lt;/h2&gt;&#xA;&lt;p&gt;Write an CLI application that prints out &amp;ldquo;Hello TDD world!&amp;rdquo; in STDOUT.&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-did-i-do-it&#34;&gt;How did i do it?&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;I created a project using &lt;code&gt;cargo new hello-tdd-world&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;I added a dependency &lt;code&gt;assert_cmd&lt;/code&gt; which lets us test out outputs of any binary program&lt;/li&gt;&#xA;&lt;li&gt;Created a file &lt;code&gt;tests/cli.rs&lt;/code&gt;  and I wrote the following test&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; assert_cmd::Command;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#[test]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test_cli_app_should_print_hello_tdd_world&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; cmd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Command::cargo_bin(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello-world-tdd&amp;#34;&lt;/span&gt;).unwrap();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cmd.assert().success().stdout(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello TDD world!&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;Run the test using command &lt;code&gt;cargo test&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;The above test will fail saying the following, this happens because the cargo new had generated a &lt;code&gt;src/main.rs&lt;/code&gt; file which printed out &amp;ldquo;Hello world!&amp;rdquo;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-log&#34; data-lang=&#34;log&#34;&gt;running 1 test&#xA;test test_cli_app_should_print_hello_tdd_world ... FAILED&#xA;&#xA;failures:&#xA;&#xA;---- test_cli_app_should_print_hello_tdd_world stdout ----&#xA;thread &amp;#39;test_cli_app_should_print_hello_tdd_world&amp;#39; panicked at &amp;#39;Unexpected stdout, failed diff original var&#xA;├── original: Hello TDD world!&#xA;├── diff:&#xA;│   --- &#x9;orig&#xA;│   +++ &#x9;var&#xA;│   @@ -1 +1 @@&#xA;│   -Hello TDD world!&#xA;│   +Hello world!&#xA;└── var as str: Hello world!&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&#xA;&lt;li&gt;Now that we have a failing test(RED), the next job is to make it green by modifying the contents of the println statement.&lt;/li&gt;&#xA;&lt;li&gt;Run &lt;code&gt;cargo test&lt;/code&gt; again, The test now passes (Green)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The code for this is available at &lt;a href=&#34;https://github.com/kishaningithub/hello-world-tdd&#34;&gt;https://github.com/kishaningithub/hello-world-tdd&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Use Zap to Perform Dast</title>
      <link>https://kishaningithub.github.io/blog/use-zap-to-perform-dast/</link>
      <pubDate>Wed, 16 Feb 2022 14:02:53 +0530</pubDate>
      <guid>https://kishaningithub.github.io/blog/use-zap-to-perform-dast/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#what-is-dynamic-application-security-testing-dast&#34;&gt;What is Dynamic Application Security Testing (DAST)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#what-is-zap&#34;&gt;What is ZAP&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#how-to-use-zap&#34;&gt;How to use ZAP&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#zap-scan-for-api&#34;&gt;ZAP Scan for API&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#local-run&#34;&gt;Local Run&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#example---for-api-with-swagger&#34;&gt;Example - for API with Swagger&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#for-soapgraphql&#34;&gt;For SOAP/GraphQL&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#circleci-integrate&#34;&gt;CircleCI Integrate&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#example---for-api-with-swagger-1&#34;&gt;Example - for API with Swagger&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#for-soapgraphql-1&#34;&gt;For SOAP/GraphQL&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#zap-scan-for-application-with-ui&#34;&gt;ZAP Scan for Application (with UI)&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#local-run-for-ui-app&#34;&gt;Local Run for UI app&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#circleci-integration-for-ui-app&#34;&gt;CircleCI Integration for UI app&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;h3 id=&#34;what-is-dynamic-application-security-testing-dast&#34;&gt;What is Dynamic Application Security Testing (DAST)&lt;/h3&gt;&#xA;&lt;p&gt;Dynamic application security testing (DAST) is a process of testing an application or software product in an operating state. This kind of testing is helpful for industry-standard compliance and general security protections for evolving projects.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting Hard Disk Info in Mac Using Terminal</title>
      <link>https://kishaningithub.github.io/blog/getting-hard-disk-info-in-mac-using-terminal/</link>
      <pubDate>Tue, 16 Nov 2021 15:07:38 +0530</pubDate>
      <guid>https://kishaningithub.github.io/blog/getting-hard-disk-info-in-mac-using-terminal/</guid>
      <description>&lt;p&gt;Its pretty easy. Just run the &lt;code&gt;diskutil&lt;/code&gt; like the following&lt;/p&gt;&#xA;&lt;h2 id=&#34;command&#34;&gt;Command&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;diskutil info disk0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;output&#34;&gt;Output&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;   Device Identifier:         disk0&#xA;   Device Node:               /dev/disk0&#xA;   Whole:                     Yes&#xA;   Part of Whole:             disk0&#xA;   Device / Media Name:       APPLE SSD AP0256M&#xA;&#xA;   Volume Name:               Not applicable (no file system)&#xA;   Mounted:                   Not applicable (no file system)&#xA;   File System:               None&#xA;&#xA;   Content (IOContent):       GUID_partition_scheme&#xA;   OS Can Be Installed:       No&#xA;   Media Type:                Generic&#xA;   Protocol:                  PCI-Express&#xA;   SMART Status:              Verified&#xA;&#xA;   Disk Size:                 251.0 GB (251000193024 Bytes) (exactly 490234752 512-Byte-Units)&#xA;   Device Block Size:         4096 Bytes&#xA;&#xA;   Media OS Use Only:         No&#xA;   Media Read-Only:           No&#xA;   Volume Read-Only:          Not applicable (no file system)&#xA;&#xA;   Device Location:           Internal&#xA;   Removable Media:           Fixed&#xA;&#xA;   Solid State:               Yes&#xA;   Virtual:                   No&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Configuring Hp Deskjet 2700 Printer for Printing Over Wifi</title>
      <link>https://kishaningithub.github.io/blog/configuring-hp-deskjet-2700-printer-for-printing-over-wifi/</link>
      <pubDate>Mon, 27 Sep 2021 14:15:41 +0530</pubDate>
      <guid>https://kishaningithub.github.io/blog/configuring-hp-deskjet-2700-printer-for-printing-over-wifi/</guid>
      <description>&lt;p&gt;It was so frustrating for me to connect my printer(HP DeskJet Ink Advantage 2700 All-In-One printer) to print over wifi network and the most calming part in this frustrating experience is the slogan that is stamped on the printer! &amp;ldquo;Keep it simple&amp;rdquo; 🤣🤣&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://kishaningithub.github.io/images/6yyore3zqnmu7i0wm6qx.jpg&#34; alt=&#34;Keep it simple image&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;It is definitely not simple unless you know the trick 😊&lt;/p&gt;&#xA;&lt;p&gt;Hence i am writing this blog for my future self and also people who face the same issue.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Capturing Custom Last Request Time Metrics Using Prometheus in Gin</title>
      <link>https://kishaningithub.github.io/blog/capturing-custom-last-request-time-metrics-using-prometheus-in-gin/</link>
      <pubDate>Fri, 17 Sep 2021 14:15:41 +0530</pubDate>
      <guid>https://kishaningithub.github.io/blog/capturing-custom-last-request-time-metrics-using-prometheus-in-gin/</guid>
      <description>&lt;p&gt;We will be using &lt;a href=&#34;https://golang.org/&#34;&gt;golang&lt;/a&gt;, &lt;a href=&#34;https://github.com/gin-gonic/gin&#34;&gt;gin&lt;/a&gt;, &lt;a href=&#34;https://github.com/prometheus/client_golang&#34;&gt;prometheus go library&lt;/a&gt; to expose last request time metrics&lt;/p&gt;&#xA;&lt;h2 id=&#34;out-of-the-box-metrics&#34;&gt;Out of the box metrics&lt;/h2&gt;&#xA;&lt;p&gt;Spin up a gin go application which exposes the metrics which comes out of the box via the /metrics endpoint&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/gin-gonic/gin&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;github.com/prometheus/client_golang/prometheus/promhttp&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;log&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;gin&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Default&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;r&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GET&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/metrics&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;gin&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Context&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;handler&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;promhttp&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Handler&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;handler&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ServeHTTP&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Writer&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Request&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;r&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Run&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:8080&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Fatalln&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run the application using command &lt;code&gt;go run main.go&lt;/code&gt; and&#xA;When you hit the &lt;code&gt;/metrics&lt;/code&gt; you will see the following&lt;/p&gt;</description>
    </item>
    <item>
      <title>Backup and restore all your apps in Mac OS</title>
      <link>https://kishaningithub.github.io/blog/back-up-and-restore-apps-in-mac/</link>
      <pubDate>Tue, 23 Mar 2021 10:24:15 +0530</pubDate>
      <guid>https://kishaningithub.github.io/blog/back-up-and-restore-apps-in-mac/</guid>
      <description>&lt;h2 id=&#34;prerequisite&#34;&gt;Prerequisite&lt;/h2&gt;&#xA;&lt;p&gt;This assumes you are installing everything using &lt;a href=&#34;https://brew.sh/&#34;&gt;homebrew&lt;/a&gt; as a practice.&#xA;If you are not doing it already, getting started is as easy as it gets. Some&lt;/p&gt;&#xA;&lt;p&gt;Search for an app(cli/gui)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew search &amp;lt;&amp;lt;app&amp;gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To install a cli app&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install &amp;lt;&amp;lt;cli app&amp;gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To install a GUI app&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install --cask &amp;lt;&amp;lt;gui app&amp;gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;backup-all-your-apps-cli-and-gui&#34;&gt;Backup all your apps (cli and gui)&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew bundle dump&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will output a file called &lt;code&gt;Brewfile&lt;/code&gt; whose contents will look like the following&lt;/p&gt;</description>
    </item>
    <item>
      <title>Openssl by Example</title>
      <link>https://kishaningithub.github.io/blog/openssl-by-example/</link>
      <pubDate>Mon, 26 Nov 2018 22:43:54 +0100</pubDate>
      <guid>https://kishaningithub.github.io/blog/openssl-by-example/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#symmetric-key&#34;&gt;Symmetric key&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#encryption&#34;&gt;Encryption&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#decryption&#34;&gt;Decryption&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#asymmetric-key&#34;&gt;Asymmetric key&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#key-generation&#34;&gt;Key Generation&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#public-key&#34;&gt;Public key&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#private-key&#34;&gt;Private key&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#encryption-1&#34;&gt;Encryption&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#decryption-1&#34;&gt;Decryption&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#sending-signed-messages&#34;&gt;Sending signed messages&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#reading-signed-messages&#34;&gt;Reading signed messages&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#encrypting-private-key&#34;&gt;Encrypting private key&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#others&#34;&gt;Others&lt;/a&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#find-openssl-version&#34;&gt;Find openssl version&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#list-ciphers&#34;&gt;List ciphers&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;symmetric-key&#34;&gt;Symmetric key&lt;/h2&gt;&#xA;&lt;h3 id=&#34;encryption&#34;&gt;Encryption&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;top secret text&amp;#34;&lt;/span&gt; | openssl enc -aes-256-cbc -base64&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;enter aes-256-cbc encryption password:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Verifying - enter aes-256-cbc encryption password:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt; encrypte&lt;/span&gt;d text &amp;gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;decryption&#34;&gt;Decryption&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;&amp;lt; encrypted text &amp;gt;&amp;gt;&amp;#34;&lt;/span&gt; | openssl enc -d -aes-256-cbc -base64&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;enter aes-256-cbc decryption password:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;top secret text&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;asymmetric-key&#34;&gt;Asymmetric key&lt;/h2&gt;&#xA;&lt;h3 id=&#34;key-generation&#34;&gt;Key Generation&lt;/h3&gt;&#xA;&lt;h4 id=&#34;public-key&#34;&gt;Public key&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl genrsa -out private.pem &lt;span style=&#34;color:#ae81ff&#34;&gt;2048&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;private-key&#34;&gt;Private key&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl rsa -in private.pem -pubout -out public.pem&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;encryption-1&#34;&gt;Encryption&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl rsautl -encrypt -in secret-transmission.txt -out secret-transmission.txt.enc -inkey public.pem -pubin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;decryption-1&#34;&gt;Decryption&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl rsautl -decrypt -in secret-transmission.txt.enc -out secret-transmission.txt -inkey private.pem&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;sending-signed-messages&#34;&gt;Sending signed messages&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl rsautl -sign -in secret-transmission.txt -out secret-transmission.txt.enc.signed -inkey private.pem&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;reading-signed-messages&#34;&gt;Reading signed messages&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl rsautl -verify -in secret-transmission.txt.enc.signed -out secret-transmission.txt -inkey public.pem -pubin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;encrypting-private-key&#34;&gt;Encrypting private key&lt;/h3&gt;&#xA;&lt;p&gt;Never store private key in clear text format!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Aws cli by example</title>
      <link>https://kishaningithub.github.io/blog/aws-cli-by-example/</link>
      <pubDate>Mon, 26 Nov 2018 15:37:58 +0100</pubDate>
      <guid>https://kishaningithub.github.io/blog/aws-cli-by-example/</guid>
      <description>&lt;h2 id=&#34;dynamo-db&#34;&gt;Dynamo DB&lt;/h2&gt;&#xA;&lt;h3 id=&#34;get-value-using-primary-key&#34;&gt;Get value using primary key&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aws dynamodb get-item --table-name users --key &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{&amp;#34;username&amp;#34;: {&amp;#34;S&amp;#34;: &amp;#34;test&amp;#34;}}&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;dump-table-data-as-csv&#34;&gt;Dump table data as csv&lt;/h3&gt;&#xA;&lt;p&gt;This expects that you have installed &lt;a href=&#34;https://github.com/stedolan/jq&#34;&gt;jq command&lt;/a&gt; on you system.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aws dynamodb scan --table-name users &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --query &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Items[].[username.S,email.S,passwordHash.S]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --output json | jq -r &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.[] | @csv&amp;#39;&lt;/span&gt; &amp;gt; dump.csv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;query-using-a-portion-of-composite-key&#34;&gt;Query using a portion of composite key&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  aws dynamodb query --table-name users &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   --key-condition-expression &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username = :username&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   --expression-attribute-values  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{&amp;#34;:username&amp;#34;:{&amp;#34;S&amp;#34;:&amp;#34;test user&amp;#34;}}&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;kms&#34;&gt;KMS&lt;/h2&gt;&#xA;&lt;h3 id=&#34;generate-data-key-from-kms-master-key&#34;&gt;Generate data key from KMS master key&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aws kms generate-data-key-without-plaintext --key-id &amp;lt;&amp;lt;KMS master key&amp;gt;&amp;gt; --key-spec AES_256 --query CiphertextBlob --output text&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Graphviz by example</title>
      <link>https://kishaningithub.github.io/blog/graphviz-by-example/</link>
      <pubDate>Wed, 21 Nov 2018 06:34:16 +0100</pubDate>
      <guid>https://kishaningithub.github.io/blog/graphviz-by-example/</guid>
      <description>&lt;p&gt;&amp;laquo; work in progress &amp;raquo;&lt;/p&gt;&#xA;&lt;p&gt;This page is a documentation of all the graphviz stuff that i did for my future self. I hope you find this useful as well 😊&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configuring multiple databases in spring boot 2</title>
      <link>https://kishaningithub.github.io/blog/configuring-multiple-databases-in-spring-boot-2/</link>
      <pubDate>Sun, 18 Nov 2018 05:03:04 +0530</pubDate>
      <guid>https://kishaningithub.github.io/blog/configuring-multiple-databases-in-spring-boot-2/</guid>
      <description>&lt;p&gt;&amp;laquo; Work in progress &amp;raquo;&lt;/p&gt;&#xA;&lt;p&gt;Have to felt the need for a spring boot application to connect with multiple relational databases?&#xA;If so, Follow on to know how to get it up and running&lt;/p&gt;&#xA;&lt;p&gt;Add the following your &lt;code&gt;application.properties&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-properties&#34; data-lang=&#34;properties&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;app.datasource.first.url&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;jdbc:postgresql://localhost:5432/demo-db&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;app.datasource.first.username&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;dbuser&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;app.datasource.first.password&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;dbpass&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;app.datasource.second.url&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;jdbc:mysql://localhost/second&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;app.datasource.second.username&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;dbuser&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;app.datasource.second.password&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;dbpass&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The complete source code can be found on &lt;a href=&#34;https://github.com/kishaningithub/spring-boot-2-multiple-datasources&#34;&gt;github&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Migrating from glide to dep</title>
      <link>https://kishaningithub.github.io/blog/migrating-from-glide-to-dep/</link>
      <pubDate>Tue, 15 May 2018 00:00:00 +0000</pubDate>
      <guid>https://kishaningithub.github.io/blog/migrating-from-glide-to-dep/</guid>
      <description>&lt;p&gt;I recently migrated one of the go lang projects that i contribute to which is &lt;a href=&#34;https://github.com/aswinkarthik93/csvdiff&#34;&gt;csvdiff&lt;/a&gt; from &lt;a href=&#34;https://github.com/Masterminds/glide&#34;&gt;glide&lt;/a&gt; to &lt;a href=&#34;https://github.com/golang/dep&#34;&gt;dep&lt;/a&gt;. Here is what i had to do.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;➜  csvdiff git:&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;glide-to-dep-migration&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; dep init&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Importing configuration from glide. These are only initial constraints, and are further refined during the solve process.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Detected glide configuration files...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Converting from glide.yaml and glide.lock...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Using ^1.0.0 as initial constraint &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/cespare/xxhash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Trying v1.0.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;5c37fe3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as initial lock &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/cespare/xxhash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Trying master &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;b8bc1bf&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as initial lock &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/mitchellh/go-homedir&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Using ^0.0.2 as initial constraint &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/spf13/cobra&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Trying v0.0.2 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;a1f051b&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as initial lock &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/spf13/cobra&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Using ^1.0.2 as initial constraint &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/spf13/viper&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Trying v1.0.2 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;b5e8006&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as initial lock &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/spf13/viper&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Using ^1.2.1 as initial constraint &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/stretchr/testify&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Trying v1.2.1 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;12b6f73&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as initial lock &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/stretchr/testify&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Trying v1.4.7 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;c282820&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as initial lock &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/fsnotify/fsnotify&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Trying master &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ef8a98b&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as initial lock &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/hashicorp/hcl&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Trying v1.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;76626ae&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as initial lock &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/inconshreveable/mousetrap&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Trying master &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2c9e950&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as initial lock &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/magiconair/properties&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Trying * &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;00c29f5&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as initial lock &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/mitchellh/mapstructure&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Trying master &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;66540cf&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as initial lock &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/pelletier/go-toml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Trying v1.1.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;6364489&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as initial lock &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/spf13/afero&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Trying v1.2.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;8965335&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as initial lock &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/spf13/cast&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Trying master &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;7c0cea3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as initial lock &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/spf13/jwalterweatherman&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Trying v1.0.1 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;583c0c0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as initial lock &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/spf13/pflag&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Trying * &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;f6cff07&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as initial lock &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep golang.org/x/sys&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Trying * &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;7922cc4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as initial lock &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep golang.org/x/text&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Trying v2.2.1 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;5420a8b&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as initial lock &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep gopkg.in/yaml.v2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Trying master &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;8991bc2&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as initial lock &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/davecgh/go-spew&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Trying v1.0.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;792786c&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as initial lock &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; imported dep github.com/pmezard/go-difflib&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Using master as constraint &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; direct dep github.com/mitchellh/go-homedir&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Locking in master &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;b8bc1bf&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; direct dep github.com/mitchellh/go-homedir&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Using ^1.0.0 as constraint &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; direct dep github.com/aswinkarthik93/csvdiff&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Locking in v1.0.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0b29a09&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; direct dep github.com/aswinkarthik93/csvdiff&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Old vendor backed up to /Users/kishanb/Programming/Tools/goworkspace/src/github.com/kishaningithub/csvdiff/_vendor-20180515104327&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This created a couple of new files and a backup of the vendor directory.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Breaking rust strings</title>
      <link>https://kishaningithub.github.io/blog/breaking-rust-strings/</link>
      <pubDate>Sat, 05 May 2018 00:00:00 +0000</pubDate>
      <guid>https://kishaningithub.github.io/blog/breaking-rust-strings/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; chinese_text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;可通過每頁左上角的連結隨時調整&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; chinese_text_slice &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;chinese_text[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]; &lt;span style=&#34;color:#75715e&#34;&gt;// Focus here&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    println!(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, chinese_text_slice);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the above code i want to extract the first character out which is 可.&#xA;Since the end indices are exclusive in rust i put forth a slice &lt;code&gt;0..1&lt;/code&gt; on &lt;code&gt;chinese_text&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;If you expected the output to be 可. You are in for a surprise!&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;break_strings$ RUST_BACKTRACE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; cargo run&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Finished dev &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;unoptimized + debuginfo&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; target&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; in 0.0 secs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Running &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;target/debug/break_strings&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;thread &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;main&amp;#39;&lt;/span&gt; panicked at &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;byte index 1 is not a char boundary; it is inside &amp;#39;&lt;/span&gt;可&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; (bytes 0..3) of `可通過每頁左上角的連結隨時調整`&amp;#39;&lt;/span&gt;, src/libcore/str/mod.rs:2234:5&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stack backtrace:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             at src/libstd/sys/unix/backtrace/tracing/gcc_s.rs:49&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   1: std::panicking::default_hook::&lt;span style=&#34;color:#f92672&#34;&gt;{{&lt;/span&gt;closure&lt;span style=&#34;color:#f92672&#34;&gt;}}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             at src/libstd/sys_common/backtrace.rs:68&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             at src/libstd/sys_common/backtrace.rs:57&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             at src/libstd/panicking.rs:381&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;&amp;lt; Blah blah blah&amp;gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  17: std::sys_common::bytestring::debug_fmt_bytestring&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             at src/libstd/panicking.rs:459&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             at src/libstd/panic.rs:365&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             at src/libstd/rt.rs:58&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  18: std::rt::lang_start&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             at /Users/travis/build/rust-lang/rust/src/libstd/rt.rs:74&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  19: break_strings::main&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The worse part is this is a run time error and the back trace does&#xA;not even give the exact line number. 😓&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
