<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aws on Kishan B</title>
    <link>https://kishaningithub.github.io/tags/aws/</link>
    <description>Recent content in Aws on Kishan B</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 12 Jan 2023 10:34:53 +0530</lastBuildDate>
    <atom:link href="https://kishaningithub.github.io/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to get the DDL dump of a redshift database</title>
      <link>https://kishaningithub.github.io/blog/how-to-get-the-ddl-dump-of-a-redshift-database/</link>
      <pubDate>Thu, 12 Jan 2023 10:34:53 +0530</pubDate>
      <guid>https://kishaningithub.github.io/blog/how-to-get-the-ddl-dump-of-a-redshift-database/</guid>
      <description>&lt;p&gt;When I was googling &amp;ldquo;How to get the DDL dump of a redshift database&amp;rdquo; I found &lt;a href=&#34;https://awsbytes.com/how-to-get-the-ddl-of-a-table-in-redshift-database/&#34;&gt;this blog&lt;/a&gt;&#xA;which proposed a way do it but the con of the approach proposed there is it requires us create new objects in redshift just to extract DDL which was not acceptable&#xA;for me, so I tried and found a better way which is given below&lt;/p&gt;&#xA;&lt;h2 id=&#34;approach&#34;&gt;Approach&lt;/h2&gt;&#xA;&lt;p&gt;The approach below makes use of the following commands from redshift and wraps them in a bash script which makes use of the redshift data api&lt;/p&gt;</description>
    </item>
    <item>
      <title>Aws cli by example</title>
      <link>https://kishaningithub.github.io/blog/aws-cli-by-example/</link>
      <pubDate>Mon, 26 Nov 2018 15:37:58 +0100</pubDate>
      <guid>https://kishaningithub.github.io/blog/aws-cli-by-example/</guid>
      <description>&lt;h2 id=&#34;dynamo-db&#34;&gt;Dynamo DB&lt;/h2&gt;&#xA;&lt;h3 id=&#34;get-value-using-primary-key&#34;&gt;Get value using primary key&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aws dynamodb get-item --table-name users --key &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{&amp;#34;username&amp;#34;: {&amp;#34;S&amp;#34;: &amp;#34;test&amp;#34;}}&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;dump-table-data-as-csv&#34;&gt;Dump table data as csv&lt;/h3&gt;&#xA;&lt;p&gt;This expects that you have installed &lt;a href=&#34;https://github.com/stedolan/jq&#34;&gt;jq command&lt;/a&gt; on you system.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aws dynamodb scan --table-name users &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --query &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Items[].[username.S,email.S,passwordHash.S]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --output json | jq -r &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.[] | @csv&amp;#39;&lt;/span&gt; &amp;gt; dump.csv&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;query-using-a-portion-of-composite-key&#34;&gt;Query using a portion of composite key&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  aws dynamodb query --table-name users &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   --key-condition-expression &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username = :username&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   --expression-attribute-values  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{&amp;#34;:username&amp;#34;:{&amp;#34;S&amp;#34;:&amp;#34;test user&amp;#34;}}&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;kms&#34;&gt;KMS&lt;/h2&gt;&#xA;&lt;h3 id=&#34;generate-data-key-from-kms-master-key&#34;&gt;Generate data key from KMS master key&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aws kms generate-data-key-without-plaintext --key-id &amp;lt;&amp;lt;KMS master key&amp;gt;&amp;gt; --key-spec AES_256 --query CiphertextBlob --output text&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
